{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course_app\\\\course-ui\\\\src\\\\components\\\\Allcourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport Course from \"./Course\";\nimport base_url from \"../api/bootapi\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport App from \"../App\"; //we have used a functional component here not a class based function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Allcourse = () => {\n  _s();\n\n  // passing object course\n  // The reason we used blank array [] is So the function we have passed in the useEffect will only execute when the component is mounted\n  // and if u want it to run when the component is updated too then remove []\n  useEffect(() => {\n    //alert(\"testing\");\n    document.title = \"View All Courses  || Shreyansh Academy\";\n  }, []); //here we have passed a blank array [] to stop the refresh after every action on the Allcourses page\n  // function to call server for ( @GetMapping(\"/courses\")  )\n\n  const getAllCoursesFromServer = () => {\n    axios.get(`${base_url}/courses`).then(response => {\n      //success\n      //console.log(response);\n      console.log(response.data);\n      toast.success(\"courses has been loaded\", {\n        position: \"bottom-center\"\n      });\n      setCourses(response.data); //  using response.data the data will be fetched from the backend using the setCourses function; not from the below array data in setCourses\n    }, error => {\n      //for error\n      console.log(error);\n      toast.error(\"Something really went wrong\");\n    });\n  }; // const getAllCoursesFromServer = () => {      \n  //     axios.get(`${base_url}/courses`).then(\n  //         (response)=> {\n  //             //success\n  //             console.log(response);\n  //             //console.log(response.data);\n  //             toast.success(\"courses has been loaded\");\n  //         },\n  //         (error) => {\n  //             //for error\n  //             console.log(error);\n  //             toast.error(\"Something really went wrong\");\n  //         }\n  //     );\n  // };\n\n\n  useEffect(() => {\n    getAllCoursesFromServer();\n  }, []); // So the setCourses function will update courses\n\n  const [courses, setCourses] = useState([// useState is a Hook that enables the states\n    // to use Class based functionallity we use hooks\n    // {title:\"Java Course\",description:\"this is just testing\"},     //These are array of objects\n    // {title:\"Django Course\",description:\"this is demo\"},\n    // {title:\"React Course\",description:\"this is UI Course\"},\n    // {title:\"Angular Course\",description:\"this is UI Course\"}\n  ]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"List of courses are as follows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), courses.length > 0 ? courses.map(item => /*#__PURE__*/_jsxDEV(Course, {\n      course: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 58\n    }, this)) : \"No Courses\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Allcourse, \"zxip5Qatcm4MoYWvK5mGwlAY3gc=\");\n\n_c = Allcourse;\nexport default Allcourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Allcourse\");","map":{"version":3,"sources":["D:/Course_app/course-ui/src/components/Allcourses.js"],"names":["React","useState","useEffect","Button","Course","base_url","axios","toast","App","Allcourse","document","title","getAllCoursesFromServer","get","then","response","console","log","data","success","position","setCourses","error","courses","length","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CAMA;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAK;AAEzB;AACA;AACAP,EAAAA,SAAS,CAAE,MAAM;AACb;AACAQ,IAAAA,QAAQ,CAACC,KAAT,GAAiB,wCAAjB;AACH,GAHQ,EAGN,EAHM,CAAT,CAJoB,CAOT;AAGX;;AAGA,QAAMC,uBAAuB,GAAG,MAAM;AAClCN,IAAAA,KAAK,CAACO,GAAN,CAAW,GAAER,QAAS,UAAtB,EAAiCS,IAAjC,CACKC,QAAD,IAAa;AACT;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAX,MAAAA,KAAK,CAACY,OAAN,CAAc,yBAAd,EAAyC;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAzC;AAEAC,MAAAA,UAAU,CAACN,QAAQ,CAACG,IAAV,CAAV,CANS,CAMoB;AAChC,KARL,EASKI,KAAD,IAAW;AACP;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAf,MAAAA,KAAK,CAACe,KAAN,CAAY,6BAAZ;AACH,KAbL;AAgBH,GAjBD,CAboB,CAgCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAIApB,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,uBAAuB;AAC1B,GAFQ,EAEN,EAFM,CAAT,CAnDoB,CAyDpB;;AACA,QAAM,CAACW,OAAD,EAASF,UAAT,IAAuBpB,QAAQ,CAAC,CAAW;AACA;AAC7C;AACA;AACA;AACA;AALkC,GAAD,CAArC;AASA,sBACI;AAAA,4BAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAUOsB,OAAO,CAACC,MAAR,GAAiB,CAAjB,GAAqBD,OAAO,CAACE,GAAR,CAAaC,IAAD,iBAAS,QAAC,MAAD;AAAsB,MAAA,MAAM,EAAIA;AAAhC,OAAaA,IAAI,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YAArB,CAArB,GAAsF,YAV7F;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAlFD;;GAAMlB,S;;KAAAA,S;AAoFN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport Course from \"./Course\"\r\nimport base_url from \"../api/bootapi\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport App from \"../App\";\r\n\r\n\r\n\r\n\r\n\r\n//we have used a functional component here not a class based function\r\nconst Allcourse = () => {    // passing object course\r\n    \r\n    // The reason we used blank array [] is So the function we have passed in the useEffect will only execute when the component is mounted\r\n    // and if u want it to run when the component is updated too then remove []\r\n    useEffect( () => {\r\n        //alert(\"testing\");\r\n        document.title = \"View All Courses  || Shreyansh Academy\"; \r\n    }, [] );   //here we have passed a blank array [] to stop the refresh after every action on the Allcourses page\r\n\r\n\r\n    // function to call server for ( @GetMapping(\"/courses\")  )\r\n\r\n\r\n    const getAllCoursesFromServer = () => {      \r\n        axios.get(`${base_url}/courses`).then(\r\n            (response)=> {\r\n                //success\r\n                //console.log(response);\r\n                console.log(response.data);\r\n                toast.success(\"courses has been loaded\", { position: \"bottom-center\",});\r\n\r\n                setCourses(response.data);   //  using response.data the data will be fetched from the backend using the setCourses function; not from the below array data in setCourses\r\n            },\r\n            (error) => {\r\n                //for error\r\n                console.log(error);\r\n                toast.error(\"Something really went wrong\");\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    // const getAllCoursesFromServer = () => {      \r\n    //     axios.get(`${base_url}/courses`).then(\r\n    //         (response)=> {\r\n    //             //success\r\n    //             console.log(response);\r\n    //             //console.log(response.data);\r\n    //             toast.success(\"courses has been loaded\");\r\n    //         },\r\n    //         (error) => {\r\n    //             //for error\r\n    //             console.log(error);\r\n    //             toast.error(\"Something really went wrong\");\r\n    //         }\r\n    //     );\r\n\r\n    // };\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getAllCoursesFromServer();\r\n    }, []);\r\n\r\n\r\n\r\n    // So the setCourses function will update courses\r\n    const [courses,setCourses] = useState([          // useState is a Hook that enables the states\r\n                                                     // to use Class based functionallity we use hooks\r\n        // {title:\"Java Course\",description:\"this is just testing\"},     //These are array of objects\r\n        // {title:\"Django Course\",description:\"this is demo\"},\r\n        // {title:\"React Course\",description:\"this is UI Course\"},\r\n        // {title:\"Angular Course\",description:\"this is UI Course\"}\r\n    ])    \r\n    \r\n\r\n    return(\r\n        <div>\r\n            {/* <Button onClick = { () => {     // To check the above useage of blank array []\r\n                console.log(\"test\");\r\n                setCourses([...courses, {title: \" Latest Course \", description: \"This is demo\"}, ]);\r\n            }}>  Test  </Button> \r\n            */}\r\n            <h1>All Courses</h1>\r\n            <p>List of courses are as follows</p>\r\n\r\n            {\r\n               courses.length > 0 ? courses.map((item)=>(<Course key={item.id} course = {item} />)): \"No Courses\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Allcourse;\r\n"]},"metadata":{},"sourceType":"module"}